.ui.container 
    %h1.ui.centered.dividing.header= @round.result ? (@round.catnip_stolen ? 'The catnip was stolen!' : 'The catnip is safe!') : 'Waiting for other player'
    .ui.cards
        .ui.card 
            .content
                %h5.ui.header= "#{@round.thief.name}: #{@game.score_for(@round.thief)}"
        .ui.centered.card.hidden(style='box-shadow: none;')
        .ui.card
            .content 
                %h5.ui.header= "#{@round.defender.name}: #{@game.score_for(@round.defender)}"
    .ui.grid
        .eight.wide.column
            %h3.ui.dividing.header Thieves
            .ui.three.stackable.cards
                - @round.chosen_thief_cats.each do |cat|
                    .ui.raised.card
                        .content 
                            .header= cat.name
                            .description= cat.ability
        .eight.wide.column
            %h3.ui.dividing.header Defenders
            .ui.three.stackable.cards
                - @round.chosen_defender_cats.each do |cat|
                    .ui.raised.card
                        .content 
                            .header= cat.name
                            .description= cat.ability
        .six.wide.column
            .ui.items 
                .item 
                    .content
                        .header Thieves Plan
                        .description
                            %p= @round.thief_plan
        .four.wide.column
            .ui.cards
                .ui.raised.card
                    .content 
                        .header= @round.location.name
                        .description= @round.location.description
        .six.wide.column
            .ui.items 
                .item 
                    .content
                        .header Defenders Plan
                        .description
                            %p= @round.defender_plan
        - if @round.result
            .sixteen.wide.column
                .ui.segment
                    %h3.ui.centered.header Result
                    .description
                        %p= @round.result
            .sixteen.wide.column
                .ui.fluid.button#next-round-button(action="#{next_round_path(@game.room_code, @round.round_number)}"){ class: ('loading' if @round.player_is_ready?(@player))} Next Round

:javascript

    setTimeout(checkIfResultAvailable, 3000)

    function checkIfResultAvailable() {
        if ("#{@round.result}") {
            return
        } else {
             $.ajax({
                method: 'GET',
                url: "#{check_for_round_result_path(@game.room_code, @round.round_number)}",
                success: function(response) {
                    if(response.success && response.results_ready) {
                        window.location.reload();
                    } else {
                        setTimeout(checkIfResultAvailable, 3000);
                    }
                }
            });
        }
    }

    $('#next-round-button').click(function(e) {
        $button = $('#next-round-button');
        if ($button.hasClass('loading')) {
            return
        }

        $button.addClass('loading');
        $.ajax({
            method: 'POST',
            url: $button.attr('action'),
            success: function(response) {
                if (response.success) {
                    if(response.location) {
                        window.location = response.location;
                    } else {
                        $button[0].innerHTML = 'Waiting for other player';
                        $button[0].style = 'color: rgba(0,0,0,0.2) !important';
                        setTimeout(checkIfNextRoundReady, 3000);
                    }
                }
            }
        });
    });

    function checkIfNextRoundReady() {
        $button = $('#next-round-button');

        $.ajax({
            method: 'GET',
            url: $button.attr('action'),
            success: function(response) {
                console.log(response);
                if (response.success) {
                    if(response.location) {
                        window.location = response.location;
                    } else {
                        setTimeout(checkIfNextRoundReady, 3000);
                    }
                }
            }
        });
    }

- if @round.player_is_ready?(@player)
    :javascript
        setTimeout(checkIfNextRoundReady, 3000);
