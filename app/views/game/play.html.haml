:css
    .ui.cards > .ui.selected.card {
        box-shadow: 0 0 0 1px #d4d4d5, 0 2px 17px 0 rgba(34,150,38,.82), 0 2px 17px 0 rgba(34,36,38,.15)
    }

    .ui.selectable-card.card {
        cursor: pointer;
    }

.ui.container
    %h1.ui.centered.dividing.header= "#{@round.player_role(@player) == 'thief' ? 'Steal' : 'Defend'} The Catnip"
    .ui.cards
        .ui.centered.card(style='max-width: 100px; overflow-x: hidden; margin-top: -2px; box-shadow: none; border: 1px solid #d4d4d5; border-top: 1px solid white;')
            .content
                %h2.ui.centered.header#round-timer= @game.round_length
    %form.ui.form(action="#{submit_plan_path(@game.room_code, @round.round_number)}")
        .field
            .ui.error.message
        .ui.grid
            .ten.wide.column
                %h3.ui.dividing.header= "Choose #{@game.squad_size} cats for your squad"
                .ui.three.cards
                    - @player_cats.each do |cat|
                        .ui.card.selectable-card(data-value="#{cat.id}")
                            .content 
                                .header= cat.name
                                .description= cat.ability
            .six.wide.column
                %h3.ui.dividing.header Location
                .ui.cards
                    .ui.card
                        .content 
                            .header= @location.name
                            .description= @location.description
                %br
                .field
                    %label Squad Plan
                    %textarea(rows='6' name='plan' placeholder="Enter your plan for how your squad will #{@round.player_role(@player) == 'thief' ? 'steal' : 'defend'} the catnip")
            .sixteen.wide.column
                %button.ui.fluid.button Ready

:javascript

    setTimeout(updateTimer, 1000);

    function updateTimer() {
        let $roundTimer = $('#round-timer')
        let previousTime = $roundTimer[0].innerHTML

        if(previousTime < 17) {
            $roundTimer.addClass('red');
        }
        
        if(previousTime > 0) {
            $roundTimer[0].innerHTML = previousTime - 1
            setTimeout(updateTimer, 1000);
        }
        
    }

    $('.selectable-card').on('click', function(e) {
        $card = $(e.target.closest('.card'));
        if($card.hasClass('selected')) {
            $card.removeClass('selected');
        } else {
            $card.addClass('selected');
        }
    });

    $('.form').form({
        revalidate: true,
        fields: {
            plan: {
                identifier: 'plan',
                rules: [{
                    type: 'empty',
                    prompt : 'You need to come up with a plan for your squad'
                }, {
                    type: 'maxLength[600]',
                    prompt: 'Your plan cannot be longer than 600 characters'
                }],
            },
        },
        onSuccess: function(e, fields) {
            e.preventDefault();
            $form = $('.form');

            let selectedCats = [];
            $('.selectable-card.selected').each(function() {
                selectedCats.push($(this).data('value'))
            });

            if(selectedCats.length != "#{@game.squad_size}") {
                return $form.form('add errors', ["You must select exactly #{@game.squad_size} cats for your squad"]);
            }

            $form.addClass('loading');
            let data = fields;
            data['selected_cats'] = selectedCats;

            $.ajax({
                method: 'POST',
                url: $form.attr('action'),
                data: data,
                dataType: 'json',
                success: function(response) {
                    if(response.success) {
                        window.location = response.lobby;
                    } else {
                        $form.removeClass('loading');
                        $form.form('add errors', response.errors || [response.message]);
                    }
                }
            });
        }
    });
